{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "10995710534754324398"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope"
    },
    "clientId": {
      "type": "string",
      "defaultValue": "41b23e61-6c1e-4545-b367-cd054e0ed4b4"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "d259a616-4e9d-4615-b83d-2e09a6636fd4"
    },
    "adminPassword": {
      "type": "secureString"
    }
  },
  "functions": [],
  "variables": {
    "vwanConfig": "[json('{\r\n    \"namePrefix\": \"contoso\",\r\n    \"regions\": [\r\n        {\r\n            \"location\": \"westeurope\",\r\n            \"hubAddressPrefix\": \"10.0.0.0/24\",\r\n            \"deployFw\": true,\r\n            \"deployVpnGw\": true,\r\n            \"deployErGw\": true,\r\n            \"deployP2SGw\": true,\r\n            \"p2sConfig\": {\r\n                \"p2sAddressPrefixes\": [\r\n                    \"10.0.4.0/22\"\r\n                ]\r\n            },\r\n            \"landingZones\": {\r\n                \"name\": \"weu-lz1\",\r\n                \"addressPrefix\": \"10.0.10.0/24\"\r\n            }\r\n        },\r\n        {\r\n            \"location\": \"northeurope\",\r\n            \"hubAddressPrefix\": \"10.10.0.0/24\",\r\n            \"deployFw\": true,\r\n            \"deployVpnGw\": false,\r\n            \"deployErGw\": false,\r\n            \"deployP2SGw\": false,\r\n            \"landingZones\": {\r\n                \"name\": \"neu-lz1\",\r\n                \"addressPrefix\": \"10.10.10.0/24\"\r\n            }\r\n        },\r\n        {\r\n            \"location\": \"eastus\",\r\n            \"hubAddressPrefix\": \"10.20.0.0/24\",\r\n            \"deployFw\": false,\r\n            \"deployVpnGw\": true,\r\n            \"deployErGw\": false,\r\n            \"deployP2SGw\": false,\r\n            \"landingZones\": {\r\n                \"name\": \"eus-lz1\",\r\n                \"addressPrefix\": \"10.20.10.0/24\"\r\n            }\r\n        }\r\n    ],\r\n    \"onPremLocations\": [\r\n        {\r\n            \"location\": \"westeurope\",\r\n            \"hubAddressPrefix\": \"172.16.0.0/22\",\r\n            \"deployFw\": true,\r\n            \"deployVpnGw\": false,\r\n            \"deployVM\": true\r\n        },\r\n        {\r\n            \"location\": \"eastus\",\r\n            \"hubAddressPrefix\": \"172.16.4.0/22\",\r\n            \"deployFw\": true,\r\n            \"deployVpnGw\": false,\r\n            \"deployVM\": true\r\n        }\r\n    ]\r\n}')]",
    "namePrefix": "[variables('vwanConfig').namePrefix]",
    "vwanName": "[format('{0}-vwan', variables('namePrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "location": "[parameters('location')]"
    },
    {
      "copy": {
        "name": "landingZoneRg",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "location": "[variables('vwanConfig').regions[copyIndex()].location]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vwan-deploy",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('vwanName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "9349459466365866893"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "wanType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard",
                "Basic"
              ]
            },
            "disableVpnEncryption": {
              "type": "bool",
              "defaultValue": false
            },
            "allowBranchToBranchTraffic": {
              "type": "bool",
              "defaultValue": true
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualWans",
              "apiVersion": "2020-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "type": "[parameters('wanType')]",
                "disableVpnEncryption": "[parameters('disableVpnEncryption')]",
                "allowBranchToBranchTraffic": "[parameters('allowBranchToBranchTraffic')]"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "copy": {
        "name": "virtualHubs",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-{1}-vhub', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy'), '2019-10-01').outputs.name.value, variables('vwanConfig').regions[copyIndex()].location)]"
          },
          "addressPrefix": {
            "value": "[variables('vwanConfig').regions[copyIndex()].hubAddressPrefix]"
          },
          "location": {
            "value": "[variables('vwanConfig').regions[copyIndex()].location]"
          },
          "virtualWanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy'), '2019-10-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "9811001937503591972"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Basic",
                "Standard"
              ]
            },
            "addressPrefix": {
              "type": "string"
            },
            "virtualRouterAsn": {
              "type": "int",
              "defaultValue": 0
            },
            "virtualRouterIps": {
              "type": "array",
              "defaultValue": []
            },
            "virtualWanId": {
              "type": "string"
            },
            "vpnGatewayId": {
              "type": "string",
              "defaultValue": ""
            },
            "p2SVpnGatewayId": {
              "type": "string",
              "defaultValue": ""
            },
            "expressRouteGatewayId": {
              "type": "string",
              "defaultValue": ""
            },
            "azureFirewallId": {
              "type": "string",
              "defaultValue": ""
            },
            "securityPartnerProviderId": {
              "type": "string",
              "defaultValue": ""
            },
            "securityProviderName": {
              "type": "string",
              "defaultValue": ""
            },
            "allowBranchToBranchTraffic": {
              "type": "bool",
              "defaultValue": true
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualHubs",
              "apiVersion": "2020-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "virtualWan": {
                  "id": "[parameters('virtualWanId')]"
                },
                "addressPrefix": "[parameters('addressPrefix')]",
                "sku": "[parameters('sku')]",
                "virtualRouterAsn": "[if(equals(parameters('virtualRouterAsn'), 0), json('null'), parameters('virtualRouterAsn'))]",
                "virtualRouterIps": "[if(equals(parameters('virtualRouterIps'), createArray()), json('null'), parameters('virtualRouterIps'))]",
                "vpnGateway": "[if(equals(parameters('vpnGatewayId'), ''), json('null'), createObject('id', parameters('vpnGatewayId')))]",
                "p2SVpnGateway": "[if(equals(parameters('p2SVpnGatewayId'), ''), json('null'), createObject('id', parameters('p2SVpnGatewayId')))]",
                "expressRouteGateway": "[if(equals(parameters('expressRouteGatewayId'), ''), json('null'), createObject('id', parameters('expressRouteGatewayId')))]",
                "azureFirewall": "[if(equals(parameters('azureFirewallId'), ''), json('null'), createObject('id', parameters('azureFirewallId')))]",
                "securityPartnerProvider": "[if(equals(parameters('securityPartnerProviderId'), ''), json('null'), createObject('id', parameters('securityPartnerProviderId')))]",
                "securityProviderName": "[if(equals(parameters('securityProviderName'), ''), json('null'), parameters('securityProviderName'))]",
                "allowBranchToBranchTraffic": "[parameters('allowBranchToBranchTraffic')]"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualHubs', parameters('name'))]"
            },
            "resourceName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "virtualRouterIps": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualHubs', parameters('name'))).virtualRouterIps]"
            },
            "virtualRouterAsn": {
              "type": "int",
              "value": "[reference(resourceId('Microsoft.Network/virtualHubs', parameters('name'))).virtualRouterAsn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[variables('vwanConfig').regions[copyIndex()].deployFw]",
      "copy": {
        "name": "firewallPolicies",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('firewallPolicies-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parentPolicyName": {
            "value": "[format('{0}-{1}-parent-azfwp', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].location)]"
          },
          "childPolicyName": {
            "value": "[format('{0}-{1}-child-azfwp', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].location)]"
          },
          "location": {
            "value": "[variables('vwanConfig').regions[copyIndex()].location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "6620076641224912182"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "parentPolicyName": {
              "type": "string"
            },
            "childPolicyName": {
              "type": "string"
            },
            "threatIntelMode": {
              "type": "string",
              "defaultValue": "Deny",
              "allowedValues": [
                "Off",
                "Alert",
                "Deny"
              ]
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": []
            },
            "enableProxy": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2021-02-01",
              "name": "[parameters('parentPolicyName')]",
              "location": "[parameters('location')]",
              "properties": {
                "threatIntelMode": "[parameters('threatIntelMode')]"
              }
            },
            {
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2021-02-01",
              "name": "[parameters('childPolicyName')]",
              "location": "[parameters('location')]",
              "properties": {
                "basePolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('parentPolicyName'))]"
                },
                "threatIntelMode": "[parameters('threatIntelMode')]",
                "dnsSettings": {
                  "servers": "[parameters('dnsServers')]",
                  "enableProxy": "[parameters('enableProxy')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('parentPolicyName'))]"
              ]
            }
          ],
          "outputs": {
            "parentName": {
              "type": "string",
              "value": "[parameters('parentPolicyName')]"
            },
            "parentResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/firewallPolicies', parameters('parentPolicyName'))]"
            },
            "childName": {
              "type": "string",
              "value": "[parameters('childPolicyName')]"
            },
            "childResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/firewallPolicies', parameters('childPolicyName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[variables('vwanConfig').regions[copyIndex()].deployFw]",
      "copy": {
        "name": "azureFirewalls",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('azureFirewalls-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-{1}-vhub-azfw', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy'), '2019-10-01').outputs.name.value, variables('vwanConfig').regions[copyIndex()].location)]"
          },
          "hubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value]"
          },
          "location": {
            "value": "[variables('vwanConfig').regions[copyIndex()].location]"
          },
          "fwPolicyId": {
            "value": "[if(variables('vwanConfig').regions[copyIndex()].deployFw, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('firewallPolicies-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.childResourceId.value, '')]"
          },
          "publicIPsCount": {
            "value": 1
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "6484248228581352286"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "hubId": {
              "type": "string"
            },
            "fwPolicyId": {
              "type": "string"
            },
            "publicIPsCount": {
              "type": "int",
              "defaultValue": 1
            },
            "publicIPAddresses": {
              "type": "array",
              "defaultValue": []
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "variables": {
            "copy": [
              {
                "name": "adresses",
                "count": "[length(parameters('publicIPAddresses'))]",
                "input": {
                  "address": "[parameters('publicIPAddresses')[copyIndex('adresses')]]"
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2021-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "AZFW_Hub",
                  "tier": "Standard"
                },
                "virtualHub": {
                  "id": "[parameters('hubId')]"
                },
                "hubIPAddresses": {
                  "publicIPs": {
                    "addresses": "[if(equals(parameters('publicIPAddresses'), createArray()), json('null'), variables('adresses'))]",
                    "count": "[parameters('publicIPsCount')]"
                  }
                },
                "firewallPolicy": {
                  "id": "[parameters('fwPolicyId')]"
                }
              }
            }
          ],
          "outputs": {
            "fwName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('name'))]"
            },
            "fwPrivateIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('name'))).hubIPAddresses.privateIPAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('firewallPolicies-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[variables('vwanConfig').regions[copyIndex()].deployVpnGw]",
      "copy": {
        "name": "vpnGateways",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('vpnGateways-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value]"
          },
          "hubvpngwname": {
            "value": "[format('{0}-vpng', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceName.value)]"
          },
          "location": {
            "value": "[variables('vwanConfig').regions[copyIndex()].location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "13256035894051258742"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the resource should be created."
              }
            },
            "hubvpngwname": {
              "type": "string",
              "metadata": {
                "description": "Specifies the name to use for the Virtual Hub resource."
              }
            },
            "hubid": {
              "type": "string",
              "metadata": {
                "description": "Virtual WAN ID"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/vpnGateways",
              "apiVersion": "2020-06-01",
              "name": "[parameters('hubvpngwname')]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualHub": {
                  "id": "[parameters('hubid')]"
                },
                "bgpSettings": {
                  "asn": 65515
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/vpnGateways', parameters('hubvpngwname'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('hubvpngwname')]"
            },
            "gwpublicip": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('hubvpngwname'))).ipConfigurations[0].publicIpAddress]"
            },
            "gwprivateip": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('hubvpngwname'))).ipConfigurations[0].privateIpAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[variables('vwanConfig').regions[copyIndex()].deployErGw]",
      "copy": {
        "name": "erGateways",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('erGateways-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualHubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value]"
          },
          "gwName": {
            "value": "[format('{0}-erg', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceName.value)]"
          },
          "location": {
            "value": "[variables('vwanConfig').regions[copyIndex()].location]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "4223039679008986752"
            }
          },
          "parameters": {
            "gwName": {
              "type": "string"
            },
            "scaleUnits": {
              "type": "int",
              "defaultValue": 1
            },
            "virtualHubId": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/expressRouteGateways",
              "apiVersion": "2021-02-01",
              "name": "[parameters('gwName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "virtualHub": {
                  "id": "[parameters('virtualHubId')]"
                },
                "autoScaleConfiguration": {
                  "bounds": {
                    "min": "[parameters('scaleUnits')]"
                  }
                }
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/expressRouteGateways', parameters('gwName'))]"
            },
            "resourceName": {
              "type": "string",
              "value": "[parameters('gwName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "vpnGateways",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[and(not(empty(parameters('clientId'))), not(empty(parameters('tenantId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vpnServerConfigurations-deploy",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vpnConfigName": {
            "value": "[format('{0}-aad-uservpn-conf', variables('namePrefix'))]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "clientId": {
            "value": "[parameters('clientId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "12472446554775256415"
            }
          },
          "parameters": {
            "vpnConfigName": {
              "type": "string"
            },
            "tenantId": {
              "type": "secureString"
            },
            "clientId": {
              "type": "secureString"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "variables": {
            "aadAuthenticationParameters": {
              "aadTenant": "[format('{0}{1}/', environment().authentication.loginEndpoint, parameters('tenantId'))]",
              "aadAudience": "[parameters('clientId')]",
              "aadIssuer": "[format('https://sts.windows.net/{0}/', parameters('tenantId'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/vpnServerConfigurations",
              "apiVersion": "2020-11-01",
              "name": "[parameters('vpnConfigName')]",
              "location": "[parameters('location')]",
              "properties": {
                "vpnProtocols": [
                  "OpenVPN"
                ],
                "vpnAuthenticationTypes": [
                  "AAD"
                ],
                "vpnClientRootCertificates": [],
                "vpnClientRevokedCertificates": [],
                "radiusServers": [],
                "radiusServerRootCertificates": [],
                "radiusClientRootCertificates": [],
                "aadAuthenticationParameters": "[variables('aadAuthenticationParameters')]",
                "vpnClientIpsecPolicies": []
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/vpnServerConfigurations', parameters('vpnConfigName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "condition": "[variables('vwanConfig').regions[copyIndex()].deployP2SGw]",
      "copy": {
        "name": "p2svpnGateways",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('ps2vpnGateway-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualHubId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value]"
          },
          "vpnServerConfigurationId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vpnServerConfigurations-deploy'), '2019-10-01').outputs.resourceId.value]"
          },
          "p2sVpnGwName": {
            "value": "[format('{0}-p2sgw', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceName.value)]"
          },
          "addressPrefixes": {
            "value": "[variables('vwanConfig').regions[copyIndex()].p2sConfig.p2sAddressPrefixes]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "5323248643933677079"
            }
          },
          "parameters": {
            "p2sVpnGwName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "virtualHubId": {
              "type": "string"
            },
            "vpnServerConfigurationId": {
              "type": "string"
            },
            "staticRoutes": {
              "type": "array",
              "defaultValue": []
            },
            "addressPrefixes": {
              "type": "array"
            },
            "enableInternetSecurity": {
              "type": "bool",
              "defaultValue": true
            },
            "vpnGatewayScaleUnit": {
              "type": "int",
              "defaultValue": 1
            },
            "customDnsServers": {
              "type": "array",
              "defaultValue": []
            },
            "isRoutingPreferenceInternet": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/p2svpnGateways",
              "apiVersion": "2020-11-01",
              "name": "[parameters('p2sVpnGwName')]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualHub": {
                  "id": "[parameters('virtualHubId')]"
                },
                "vpnServerConfiguration": {
                  "id": "[parameters('vpnServerConfigurationId')]"
                },
                "p2SConnectionConfigurations": [
                  {
                    "name": "P2SConnectionConfigDefault",
                    "properties": {
                      "routingConfiguration": {
                        "vnetRoutes": {
                          "staticRoutes": "[parameters('staticRoutes')]"
                        }
                      },
                      "vpnClientAddressPool": {
                        "addressPrefixes": "[parameters('addressPrefixes')]"
                      },
                      "enableInternetSecurity": "[parameters('enableInternetSecurity')]"
                    }
                  }
                ],
                "vpnGatewayScaleUnit": "[parameters('vpnGatewayScaleUnit')]",
                "customDnsServers": "[parameters('customDnsServers')]",
                "isRoutingPreferenceInternet": "[parameters('isRoutingPreferenceInternet')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "erGateways",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vpnServerConfigurations-deploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "copy": {
        "name": "landingZoneVnet",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-vnet-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "resourceGroup": "[format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "addressPrefix": {
            "value": "[variables('vwanConfig').regions[copyIndex()].landingZones.addressPrefix]"
          },
          "vnetName": {
            "value": "[format('{0}-vnet', variables('vwanConfig').regions[copyIndex()].landingZones.name)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "2796135588390321916"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "addressPrefix": {
              "type": "string"
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": []
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-snet-servers-nsg', parameters('vnetName'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-08-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('addressPrefix')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "subnets": [
                  {
                    "name": "snet-servers",
                    "properties": {
                      "addressPrefix": "[parameters('addressPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-snet-servers-nsg', parameters('vnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-snet-servers-nsg', parameters('vnetName')))]"
              ]
            }
          ],
          "outputs": {
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[0].id]"
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name))]"
      ]
    },
    {
      "copy": {
        "name": "landingZoneServer",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-vm-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "resourceGroup": "[format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vmName": {
            "value": "[format('{0}-vm', variables('vwanConfig').regions[copyIndex()].landingZones.name)]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)), 'Microsoft.Resources/deployments', format('{0}-vnet-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name)), '2019-10-01').outputs.subnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "9266299069886602084"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vmName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "adminUserName": {
              "type": "string",
              "defaultValue": "sysadmin"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "windowsOsVersion": {
              "type": "string",
              "defaultValue": "2019-Datacenter"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D2_v3"
            }
          },
          "functions": [],
          "variables": {
            "storageName": "[format('vmlogs{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[variables('storageName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-12-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUserName')]",
                  "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('windowsOsVersion')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-dsk', parameters('vmName'))]",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)), 'Microsoft.Resources/deployments', format('{0}-vnet-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name))]"
      ]
    },
    {
      "copy": {
        "name": "lzRouteTable",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('lzRouteTable-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceName.value]"
          },
          "labels": {
            "value": [
              "landingzone"
            ]
          },
          "routes": {
            "value": "[if(variables('vwanConfig').regions[copyIndex()].deployFw, createArray(createObject('name', 'nextHopFW', 'destinationType', 'CIDR', 'destinations', createArray('0.0.0.0/0'), 'nextHopType', 'ResourceId', 'nextHop', if(variables('vwanConfig').regions[copyIndex()].deployFw, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('azureFirewalls-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value, ''))), createArray())]"
          },
          "routeTableName": {
            "value": "[format('{0}-lzRouteTable', variables('vwanConfig').regions[copyIndex()].location)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "7816885328481164435"
            }
          },
          "parameters": {
            "hubName": {
              "type": "string"
            },
            "routeTableName": {
              "type": "string"
            },
            "routes": {
              "type": "array"
            },
            "labels": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}', parameters('hubName'), parameters('routeTableName'))]",
              "properties": {
                "routes": "[parameters('routes')]",
                "labels": "[parameters('labels')]"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', split(format('{0}/{1}', parameters('hubName'), parameters('routeTableName')), '/')[0], split(format('{0}/{1}', parameters('hubName'), parameters('routeTableName')), '/')[1])]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('azureFirewalls-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('virtualHubs-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    },
    {
      "copy": {
        "name": "lzVNetConnection",
        "count": "[length(variables('vwanConfig').regions)]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('{0}-vnet-conn-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name)]",
      "resourceGroup": "[format('{0}-vwan-rg', variables('namePrefix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "hubName": {
            "value": "[format('{0}-{1}-vhub', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy'), '2019-10-01').outputs.name.value, variables('vwanConfig').regions[copyIndex()].location)]"
          },
          "associatedRouteTableId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('lzRouteTable-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location)), '2019-10-01').outputs.resourceId.value]"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)), 'Microsoft.Resources/deployments', format('{0}-vnet-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name)), '2019-10-01').outputs.resourceId.value]"
          },
          "connectionName": {
            "value": "[format('peeredTo-{0}-vnet', variables('vwanConfig').regions[copyIndex()].landingZones.name)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "9838579138122043223"
            }
          },
          "parameters": {
            "hubName": {
              "type": "string"
            },
            "connectionName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "associatedRouteTableId": {
              "type": "string"
            },
            "propagatedRouteTableIds": {
              "type": "array",
              "defaultValue": []
            },
            "propagatedRouteTableLabels": {
              "type": "array",
              "defaultValue": []
            }
          },
          "functions": [],
          "variables": {
            "copy": [
              {
                "name": "routeTableIds",
                "count": "[length(parameters('propagatedRouteTableIds'))]",
                "input": {
                  "id": "[parameters('propagatedRouteTableIds')[copyIndex('routeTableIds')]]"
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}', parameters('hubName'), parameters('connectionName'))]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('vnetId')]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true,
                "routingConfiguration": {
                  "associatedRouteTable": {
                    "id": "[parameters('associatedRouteTableId')]"
                  },
                  "propagatedRouteTables": {
                    "labels": "[parameters('propagatedRouteTableLabels')]",
                    "ids": "[if(equals(parameters('propagatedRouteTableIds'), createArray()), json('null'), variables('routeTableIds'))]"
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-{1}-rg', variables('namePrefix'), variables('vwanConfig').regions[copyIndex()].landingZones.name)), 'Microsoft.Resources/deployments', format('{0}-vnet-deploy', variables('vwanConfig').regions[copyIndex()].landingZones.name))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', format('lzRouteTable-{0}-deploy', variables('vwanConfig').regions[copyIndex()].location))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-vwan-rg', variables('namePrefix'))), 'Microsoft.Resources/deployments', 'vwan-deploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-vwan-rg', variables('namePrefix')))]"
      ]
    }
  ]
}